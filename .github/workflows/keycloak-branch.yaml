name: Keycloak Terraform
on:
  pull_request:
    paths:
      - 'terraform/applications/keycloak/**'
jobs:
  terraform-automate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      ## detect changes in dev or utility file, may be change to something else in future for env.
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            keycloak-dev:
              - 'terraform/applications/keycloak/env/dev.tfvars'
            keycloak-utility:
              - 'terraform/applications/keycloak/env/utility.tfvars'

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "us-gov-west-1"

      # - name: Obtain GitHub Token
      #   uses: marvinpinto/action-inject-ssm-secrets@latest
      #   with:
      #     ssm_parameter: /dsva-vagov/keycloak/rp_github_token #/devops/VA_VSP_BOT_GITHUB_TOKEN
      #     env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      - name: echo stuff
        run: |
            echo "PR test"
            echo ${{ steps.changes.outputs.keycloak-dev }}
            echo ${{ steps.changes.outputs.keycloak-utility }}

      - name: terraform fmt
        id: fmt-dev
        if: steps.changes.outputs.keycloak-dev == 'true'
        working-directory: terraform/applications/keycloak
        continue-on-error: true
        run: terraform fmt -check

      - name: terraform init
        id: init-dev
        if: steps.changes.outputs.keycloak-dev == 'true'
        working-directory: terraform/applications/keycloak
        continue-on-error: true
        run: terraform init

      - name: terraform plan
        id: plan-dev
        if: steps.changes.outputs.keycloak-dev == 'true'
        working-directory: terraform/applications/keycloak
        run: terraform plan -no-color -refresh=false
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request' && steps.changes.outputs.keycloak-dev == 'true'
        env:
          FMT: "${{ steps.fmt-dev.outputs.stdout }}"
          PLAN: "${{ steps.plan-dev.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.init-dev.outcome }}\`

            <details><summary>Files in need of format</summary>
            
            \`\`\`\n
            ${process.env.FMT}
            \`\`\`
            
            </details>

            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init-vagov-dev.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan-vagov-dev.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>

            #### *Environment: dev*`;
      
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })