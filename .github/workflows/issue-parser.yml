name: "Issues"
on:
  issues:
    types: [opened, edited]
# - run: echo ${{ github.event.issue.body }}
jobs:
  bash-example:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          fetch-depth: 0

      - name: Parse issue template
        uses: stefanbuck/github-issue-parser@v2
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/client.yml
     
      - name: Create issue details json
        run: echo '${{ steps.issue-parser.outputs.jsonString }}' > issue-details.json

      - run: echo '${{ steps.issue-parser.outputs.jsonString }}'

      - name: Extract json values
        id: output-vars
        run: |
          clientName=$( jq '.client_name' issue-details.json )
          clientEnv=$( jq '.environment' issue-details.json )
          echo "::set-output name=client_name::$clientName"
          echo "::set-output name=client_env::$clientEnv"
          echo "::set-output name=test::$( jq '.environment' issue-details.json )"
      
      - name: Echo stuff
        run: |
          echo ${{ steps.output-vars.outputs.client_name }}
          echo ${{ steps.output-vars.outputs.client_env }}
          echo ${{ steps.output-vars.outputs.test }}

       # - name: Check out devops repo
      #   uses: actions/checkout@v3
      #   with:
      #     repository: department-of-veterans-affairs/devops
      #     token: ${{ secrets.GIT_TOKEN }}

      - name: "Run script"
        if: steps.output-vars.outputs.client_env == 'dev'
        id: ruby-script
        run: |
          ruby parser.rb '${{ steps.issue-parser.outputs.jsonString }}'


      - name: Git configs
        if: steps.output-vars.outputs.client_env == 'dev'
        run: |
          git config --global user.email "ritesh.patel@adhocteam.us"
          git config --global user.name "Ritesh Patel"

      - name: Make changes
        if: steps.output-vars.outputs.client_env == 'dev'
        run: |
          echo >> terraform/applications/keycloak/modules/login-gov/openid_clients.tf
          cat client.tf >> terraform/applications/keycloak/modules/login-gov/openid_clients.tf
          echo $(cat terraform/applications/keycloak/modules/login-gov/openid_clients.tf)

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      # - name: Format Terraform
      #   run: 

      - name: Create Pull Request
        if: steps.output-vars.outputs.client_env == 'dev'
        uses: peter-evans/create-pull-request@v3
        with:
          add-paths: terraform/applications/keycloak/*
          token: ${{ secrets.GIT_TOKEN }}
          commit-message: "Add new client"
          branch: add-client
          base: main
          title: "[Add Keycloak Client] adding some text"
          body: |
            An automated ADD keycloak client Request
          labels: |
            amt
    # outputs:
    #   client-name: ${{ steps.output-vars.outputs.client_name }}
    #   client-name: ${{ steps.output-vars.outputs.client_env }}